{
  "version": 3,
  "sources": ["../../@patternfly/elements/pf-text-input/pf-text-input.ts"],
  "sourcesContent": ["import { LitElement, html, isServer, type TemplateResult } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\n\nimport styles from './pf-text-input.css';\n\n/**\n * A **text input** is used to gather free-form text from a user.\n * @cssprop [--pf-c-form-control--Color=var(--pf-global--Color--100, #151515)] -\n * @cssprop [--pf-c-form-control--FontSize=var(--pf-global--FontSize--md, 1rem)] -\n * @cssprop [--pf-c-form-control--LineHeight=var(--pf-global--LineHeight--md, 1.5)] -\n * @cssprop [--pf-c-form-control--BorderWidth=var(--pf-global--BorderWidth--sm, 1px)] -\n * @cssprop [--pf-c-form-control--BorderTopColor=var(--pf-global--BorderColor--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--BorderRightColor=var(--pf-global--BorderColor--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--BorderBottomColor=var(--pf-global--BorderColor--200, #8a8d90)] -\n * @cssprop [--pf-c-form-control--BorderLeftColor=var(--pf-global--BorderColor--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--BorderRadius=0] -\n * @cssprop [--pf-c-form-control--BackgroundColor=var(--pf-global--BackgroundColor--100, #fff)] -\n * @cssprop [--pf-c-form-control--Width=100] -\n * @cssprop [--pf-c-form-control--Height=calc(var(--pf-c-form-control--FontSize) * var(--pf-c-form-control--LineHeight) + var(--pf-c-form-control--BorderWidth) * 2 + var(--pf-c-form-control--PaddingTop) + var(--pf-c-form-control--PaddingBottom))] -\n * @cssprop [--pf-c-form-control--inset--base=var(--pf-global--spacer--sm, 0.5rem)] -\n * @cssprop [--pf-c-form-control--PaddingTop=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))] -\n * @cssprop [--pf-c-form-control--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))] -\n * @cssprop [--pf-c-form-control--PaddingRight=var(--pf-c-form-control--inset--base)] -\n * @cssprop [--pf-c-form-control--PaddingLeft=var(--pf-c-form-control--inset--base)] -\n * @cssprop [--pf-c-form-control--hover--BorderBottomColor=var(--pf-global--primary-color--100, #06c)] -\n * @cssprop [--pf-c-form-control--focus--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--focus--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--focus--BorderBottomColor=var(--pf-global--primary-color--100, #06c)] -\n * @cssprop [--pf-c-form-control--m-expanded--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--m-expanded--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--m-expanded--BorderBottomColor=var(--pf-global--primary-color--100, #06c)] -\n * @cssprop [--pf-c-form-control--placeholder--Color=var(--pf-global--Color--dark-200, #6a6e73)] -\n * @cssprop [--pf-c-form-control--placeholder--child--Color=var(--pf-global--Color--100, #151515)] -\n * @cssprop [--pf-c-form-control--disabled--Color=var(--pf-global--disabled-color--100, #6a6e73)] -\n * @cssprop [--pf-c-form-control--disabled--BackgroundColor=var(--pf-global--disabled-color--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--disabled--BorderColor=transparent] -\n * @cssprop [--pf-c-form-control--readonly--BackgroundColor=var(--pf-global--disabled-color--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--readonly--hover--BorderBottomColor=var(--pf-global--BorderColor--200, #8a8d90)] -\n * @cssprop [--pf-c-form-control--readonly--focus--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))] -\n * @cssprop [--pf-c-form-control--readonly--focus--BorderBottomWidth=var(--pf-global--BorderWidth--sm, 1px)] -\n * @cssprop [--pf-c-form-control--readonly--focus--BorderBottomColor=var(--pf-global--BorderColor--200, #8a8d90)] -\n * @cssprop [--pf-c-form-control--readonly--m-plain--BackgroundColor=transparent] -\n * @cssprop [--pf-c-form-control--readonly--m-plain--inset--base=0] -\n * @cssprop [--pf-c-form-control--success--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--success--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--success--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--success--BorderBottomColor=var(--pf-global--success-color--100, #3e8635)] -\n * @cssprop [--pf-c-form-control--success--PaddingRight=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--success--BackgroundPositionX=calc(100 - var(--pf-c-form-control--PaddingLeft))] -\n * @cssprop [--pf-c-form-control--success--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--success--BackgroundPosition=var(--pf-c-form-control--success--BackgroundPositionX) var(--pf-c-form-control--success--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--success--BackgroundSizeX=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--success--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--success--BackgroundSize=var(--pf-c-form-control--success--BackgroundSizeX) var(--pf-c-form-control--success--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--success--BackgroundUrl -\n * @cssprop [--pf-c-form-control--m-warning--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--m-warning--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--m-warning--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--m-warning--BorderBottomColor=var(--pf-global--warning-color--100, #f0ab00)] -\n * @cssprop [--pf-c-form-control--m-warning--PaddingRight=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundPositionX=calc(100 - calc(var(--pf-c-form-control--PaddingLeft) - 0.0625rem))] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundPosition=var(--pf-c-form-control--m-warning--BackgroundPositionX) var(--pf-c-form-control--m-warning--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundSizeX=1.25rem] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundSize=var(--pf-c-form-control--m-warning--BackgroundSizeX) var(--pf-c-form-control--m-warning--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--m-warning--BackgroundUrl -\n * @cssprop [--pf-c-form-control--invalid--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--invalid--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--invalid--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--invalid--BorderBottomColor=var(--pf-global--danger-color--100, #c9190b)] -\n * @cssprop [--pf-c-form-control--invalid--PaddingRight=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundPositionX=calc(100 - var(--pf-c-form-control--PaddingLeft))] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundPosition=var(--pf-c-form-control--invalid--BackgroundPositionX) var(--pf-c-form-control--invalid--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundSizeX=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundSize=var(--pf-c-form-control--invalid--BackgroundSizeX) var(--pf-c-form-control--invalid--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--invalid--BackgroundUrl -\n * @cssprop [--pf-c-form-control--invalid--exclamation--Background=var(--pf-c-form-control--invalid--BackgroundUrl) var(--pf-c-form-control--invalid--BackgroundPosition) / var(--pf-c-form-control--invalid--BackgroundSize) no-repeat] -\n * @cssprop [--pf-c-form-control--invalid--Background=var(--pf-c-form-control--BackgroundColor) var(--pf-c-form-control--invalid--exclamation--Background)] -\n * @cssprop [--pf-c-form-control--m-search--PaddingLeft=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--m-search--BackgroundPosition=var(--pf-c-form-control--PaddingRight)] -\n * @cssprop [--pf-c-form-control--m-search--BackgroundSize=var(--pf-c-form-control--FontSize) var(--pf-c-form-control--FontSize)] -\n * @cssprop --pf-c-form-control--m-search--BackgroundUrl -\n * @cssprop [--pf-c-form-control--m-icon--PaddingRight=calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundUrl=none] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundPositionX=calc(100 - var(--pf-c-form-control--inset--base))] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundSizeX=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-icon--icon--spacer=var(--pf-global--spacer--sm, 0.5rem)] -\n * @cssprop [--pf-c-form-control--m-icon--icon--PaddingRight=calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--invalid--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))] -\n * @cssprop [--pf-c-form-control--m-icon--icon--BackgroundPositionX=calc(var(--pf-c-form-control--m-icon--BackgroundPositionX) - var(--pf-c-form-control--m-icon--icon--spacer) - var(--pf-c-form-control--invalid--BackgroundSizeX))] -\n * @cssprop [--pf-c-form-control--m-icon--invalid--BackgroundUrl=var(--pf-c-form-control--invalid--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)] -\n * @cssprop [--pf-c-form-control--m-icon--invalid--BackgroundPosition=var(--pf-c-form-control--invalid--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-icon--invalid--BackgroundSize=var(--pf-c-form-control--invalid--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)] -\n * @cssprop [--pf-c-form-control--m-icon--success--BackgroundUrl=var(--pf-c-form-control--success--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)] -\n * @cssprop [--pf-c-form-control--m-icon--success--BackgroundPosition=var(--pf-c-form-control--success--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-icon--success--BackgroundSize=var(--pf-c-form-control--success--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)] -\n * @cssprop [--pf-c-form-control--m-icon--m-warning--BackgroundUrl=var(--pf-c-form-control--m-warning--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)] -\n * @cssprop [--pf-c-form-control--m-icon--m-warning--BackgroundPosition=var(--pf-c-form-control--m-warning--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-icon--m-warning--BackgroundSize=var(--pf-c-form-control--m-warning--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--m-calendar--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-clock--BackgroundUrl -\n * @cssprop [--pf-c-form-control__select--PaddingRight=calc(var(--pf-global--spacer--lg, 1.5rem) + var(--pf-c-form-control--BorderWidth) + var(--pf-c-form-control--BorderWidth))] -\n * @cssprop [--pf-c-form-control__select--PaddingLeft=calc(var(--pf-global--spacer--sm, 0.5rem) - var(--pf-c-form-control--BorderWidth))] -\n * @cssprop --pf-c-form-control__select--BackgroundUrl -\n * @cssprop [--pf-c-form-control__select--BackgroundSize=.625em] -\n * @cssprop [--pf-c-form-control__select--BackgroundPositionX=calc(100 - var(--pf-global--spacer--md, 1rem) + 1px)] -\n * @cssprop [--pf-c-form-control__select--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control__select--BackgroundPosition=var(--pf-c-form-control__select--BackgroundPositionX) var(--pf-c-form-control__select--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control__select--success--PaddingRight=var(--pf-global--spacer--3xl, 4rem)] -\n * @cssprop [--pf-c-form-control__select--success--BackgroundPosition=calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))] -\n * @cssprop [--pf-c-form-control__select--m-warning--PaddingRight=var(--pf-global--spacer--3xl, 4rem)] -\n * @cssprop [--pf-c-form-control__select--m-warning--BackgroundPosition=calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)] -\n * @cssprop [--pf-c-form-control__select--invalid--PaddingRight=var(--pf-global--spacer--3xl, 4rem)] -\n * @cssprop [--pf-c-form-control__select--invalid--BackgroundPosition=calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))] -\n * @cssprop [--pf-c-form-control--textarea--Width=var(--pf-c-form-control--Width)] -\n * @cssprop [--pf-c-form-control--textarea--Height=auto] -\n * @cssprop [--pf-c-form-control--textarea--success--BackgroundPositionY=var(--pf-c-form-control--PaddingLeft)] -\n * @cssprop [--pf-c-form-control--textarea--m-warning--BackgroundPositionY=var(--pf-c-form-control--PaddingLeft)] -\n * @cssprop [--pf-c-form-control--textarea--invalid--BackgroundPositionY=var(--pf-c-form-control--PaddingLeft)] -\n * @cssprop --pf-c-form-control--m-icon-sprite--success--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--m-warning--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--invalid--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite__select--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--m-search--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--m-calendar--BackgroundUrl -\n * @cssprop [--pf-c-form-control--m-icon-sprite--m-clock--BackgroundUrl=url(/v4/images/status-icon-sprite.4fee9fefc3971799d2dd4de0a15617f0.svg#clock)] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--BackgroundSize=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--BackgroundPositionX=calc(100 - var(--pf-global--spacer--md, 1rem) + 7px)] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--success--BackgroundPosition=calc(100 - var(--pf-global--spacer--md, 1rem) + 1px - var(--pf-global--spacer--lg, 1.5rem))] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--m-warning--BackgroundPosition=calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--invalid--BackgroundPosition=calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem))] -\n * @cssprop [--pf-c-form-control__error-text--m-status--Color=var(--pf-global--danger-color--100, #c9190b)] -\n */\n@customElement('pf-text-input')\nexport class PfTextInput extends LitElement {\n  static readonly styles: CSSStyleSheet[] = [styles];\n\n  static readonly formAssociated = true;\n\n  static override readonly shadowRootOptions: ShadowRootInit = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /** Trim text on left */\n  @property({ type: Boolean, reflect: true, attribute: 'left-truncated' }) leftTruncated = false;\n\n  /**\n   * Value to indicate if the input is modified to show that validation state.\n   * If set to success, input will be modified to indicate valid state.\n   * If set to warning,  input will be modified to indicate warning state.\n   * Invalid inputs will display an error state\n   */\n  @property({ reflect: true }) validated?: 'success' | 'warning';\n\n  /** icon variant */\n  @property({ reflect: true }) icon?: 'calendar' | 'clock' | 'search';\n\n  /** Accessible label for the input when no `<label>` element is provided. */\n  @property({ reflect: true, attribute: 'accessible-label' }) accessibleLabel?: string;\n\n  /** Custom icon url to set as the text input's background-image */\n  @property({ reflect: true, attribute: 'custom-icon-url' }) customIconUrl?: string;\n\n  /** Dimensions for the custom icon set as the text input's background-size */\n  @property({ reflect: true, attribute: 'custom-icon-dimensions' }) customIconDimensions?: string;\n\n  @property({ type: Boolean, reflect: true }) plain = false;\n\n  /** Type that the input accepts. */\n  @property({ reflect: true }) type?:\n    | 'text'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'time'\n    | 'url';\n\n  /** Flag to show if the input is disabled. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Flag to show if the input is required. */\n  @property({ type: Boolean, reflect: true }) required = false;\n\n  /** Validation pattern, like `<input>` */\n  @property() pattern?: string;\n\n  /** Flag to show if the input is read only. */\n  @property({ type: Boolean, reflect: true }) readonly = false;\n\n  /** Helper text is text below a form field that helps a user provide the right information, like \"Enter a unique name\". */\n  @property({ attribute: 'helper-text' }) helperText?: string;\n\n  /** If set to 'blur', will validate when focus leaves the input */\n  @property({ attribute: 'validate-on' }) validateOn?: 'blur';\n\n  /** Displayed when validation fails */\n  @property({ attribute: 'error-text' }) errorText?: string;\n\n  /** Input placeholder. */\n  @property() placeholder?: string;\n\n  /** Value of the input. */\n  @property() value = '';\n\n  #internals = InternalsController.of(this);\n\n  #derivedLabel = '';\n\n  #touched = false;\n\n  get #disabled() {\n    return (!isServer && this.matches(':disabled')) || this.disabled;\n  }\n\n  get #input() {\n    return this.shadowRoot?.getElementById('input') as HTMLInputElement ?? null;\n  }\n\n  override willUpdate(): void {\n    this.#derivedLabel = this.accessibleLabel || this.#internals.computedLabelText;\n  }\n\n  override render(): TemplateResult<1> {\n    const { valid } = this.#internals.validity;\n    return html`\n      <input id=\"input\"\n             .placeholder=\"${this.placeholder ?? ''}\"\n             .value=\"${this.value}\"\n             pattern=\"${ifDefined(this.pattern)}\"\n             @input=\"${this.#onInput}\"\n             @keydown=\"${this.#onKeydown}\"\n             @blur=\"${this.#onBlur}\"\n             ?disabled=\"${this.#disabled}\"\n             ?readonly=\"${this.readonly}\"\n             ?required=\"${this.required}\"\n             aria-label=\"${this.#derivedLabel}\"\n             type=\"${ifDefined(this.type)}\"\n             style=\"${ifDefined(this.customIconUrl && styleMap({\n               backgroundImage: `url('${this.customIconUrl}')`,\n               backgroundSize: this.customIconDimensions,\n             }))}\">\n        <span id=\"helper-text\" ?hidden=\"${!this.helperText || valid}\">${this.helperText}</span>\n        <span id=\"error-text\" ?hidden=\"${valid}\">${this.#internals.validationMessage}</span>\n    `;\n  }\n\n  #onInput(event: Event & { target: HTMLInputElement }) {\n    const { value } = event.target;\n    this.value = value;\n    this.#internals.setFormValue(value);\n    if (this.#touched && !this.#internals.validity.valid) {\n      this.#onBlur();\n    }\n    this.#touched = true;\n  }\n\n  #onKeydown(event: Event) {\n    switch ((event as KeyboardEvent).key) {\n      case 'Enter':\n        if (this.reportValidity()) {\n          this.#internals.form?.requestSubmit(null);\n        }\n    }\n  }\n\n  #onBlur() {\n    if (this.validateOn === 'blur') {\n      this.checkValidity();\n    }\n  }\n\n  #setValidityFromInput() {\n    this.#internals.setValidity(\n      this.#input?.validity,\n      this.errorText ?? this.#input.validationMessage,\n    );\n    this.requestUpdate();\n  }\n\n  async formStateRestoreCallback(state: string, mode: string): Promise<void> {\n    if (mode === 'restore') {\n      const [controlMode, value] = state.split('/');\n      this.value = value ?? controlMode;\n      this.requestUpdate();\n      await this.updateComplete;\n      this.#setValidityFromInput();\n    }\n  }\n\n\n  async formDisabledCallback(): Promise<void> {\n    await this.updateComplete;\n    this.requestUpdate();\n  }\n\n  setCustomValidity(message: string): void {\n    this.#internals.setValidity({}, message);\n    this.requestUpdate();\n  }\n\n  checkValidity(): boolean {\n    this.#setValidityFromInput();\n    const validity = this.#internals.checkValidity();\n    this.requestUpdate();\n    return validity;\n  }\n\n  reportValidity(): boolean {\n    this.#setValidityFromInput();\n    return this.#internals.reportValidity();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'pf-text-input': PfTextInput;\n  }\n}\n"],
  "mappings": "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",
  "names": ["PfTextInput"]
}
